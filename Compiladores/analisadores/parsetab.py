
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOL BOOLEAN CHAR CHARACTER DOUBLE ELSE EOB FOR IF INT LITERAL NUMERIC OP_ATRI_DENIAL OP_ATRI_DIVISION_EQUAL OP_ATRI_EQUAL OP_ATRI_MINUS_EQUAL OP_ATRI_PLUS_EQUAL OP_ATRI_TIMES_EQUAL OP_EXEC_COLON OP_EXEC_COMMA OP_EXEC_DOT OP_EXPR_CLOSE_BRACKETS OP_EXPR_CLOSE_CURLY_BRACKETS OP_EXPR_CLOSE_PARENTHESIS OP_EXPR_OPEN_BRACKETS OP_EXPR_OPEN_CURLY_BRACKETS OP_EXPR_OPEN_PARENTHESIS OP_LOGI_AND OP_LOGI_OR OP_MARK_COMMENT OP_MARK_DQUOTES OP_MARK_SQUOTES OP_MATE_DIVISION OP_MATE_MINUS OP_MATE_MODULE OP_MATE_PLUS OP_MATE_TIMES OP_RELA_BIGGER OP_RELA_BIGGER_EQUAL OP_RELA_COMPARE OP_RELA_DIFFERENTIATE OP_RELA_LESS OP_RELA_LESS_EQUAL STRING VARIABLE WHILE\n    statements : statements statement\n            | statement\n    \n    statement : comment\n            | declaration\n            | assignment\n            | decision\n            | expression\n            | operation\n            | conditional\n            | value\n    \n    decision : IF OP_EXPR_OPEN_PARENTHESIS conditional OP_EXPR_CLOSE_PARENTHESIS OP_EXEC_COLON statement\n            | IF OP_EXPR_OPEN_PARENTHESIS conditional OP_EXPR_CLOSE_PARENTHESIS OP_EXEC_COLON statement ELSE OP_EXEC_COLON statement\n    \n    expression : OP_EXPR_OPEN_PARENTHESIS conditional OP_EXPR_CLOSE_PARENTHESIS\n            | OP_EXPR_OPEN_PARENTHESIS operation OP_EXPR_CLOSE_PARENTHESIS\n            | OP_EXPR_OPEN_PARENTHESIS value OP_EXPR_CLOSE_PARENTHESIS\n    \n    assignment : INT VARIABLE OP_ATRI_EQUAL NUMERIC EOB\n            | DOUBLE VARIABLE OP_ATRI_EQUAL NUMERIC EOB\n            | BOOL VARIABLE OP_ATRI_EQUAL BOOLEAN EOB\n            | CHARACTER VARIABLE OP_ATRI_EQUAL CHAR EOB\n            | STRING VARIABLE OP_ATRI_EQUAL LITERAL EOB\n\n            | INT VARIABLE OP_ATRI_EQUAL VARIABLE EOB\n            | DOUBLE VARIABLE OP_ATRI_EQUAL VARIABLE EOB\n            | BOOL VARIABLE OP_ATRI_EQUAL VARIABLE EOB\n            | CHARACTER VARIABLE OP_ATRI_EQUAL VARIABLE EOB\n            | STRING VARIABLE OP_ATRI_EQUAL VARIABLE EOB\n\n            | INT VARIABLE OP_ATRI_EQUAL operation EOB\n            | DOUBLE VARIABLE OP_ATRI_EQUAL operation EOB\n\n            | VARIABLE OP_ATRI_EQUAL NUMERIC EOB\n            | VARIABLE OP_ATRI_EQUAL BOOLEAN EOB\n            | VARIABLE OP_ATRI_EQUAL CHARACTER EOB\n            | VARIABLE OP_ATRI_EQUAL LITERAL EOB\n            | VARIABLE OP_ATRI_EQUAL VARIABLE EOB\n    \n    comment : OP_MARK_COMMENT\n    \n    declaration : INT VARIABLE EOB\n            | DOUBLE VARIABLE EOB\n            | BOOL VARIABLE EOB\n            | CHARACTER VARIABLE EOB\n            | STRING VARIABLE EOB\n    \n    operation : VARIABLE OP_MATE_PLUS VARIABLE\n            | VARIABLE OP_MATE_MINUS VARIABLE\n            | VARIABLE OP_MATE_TIMES VARIABLE\n            | VARIABLE OP_MATE_DIVISION VARIABLE\n            | VARIABLE OP_MATE_MODULE VARIABLE\n    \n    conditional : VARIABLE OP_RELA_LESS NUMERIC\n            | VARIABLE OP_RELA_LESS BOOLEAN\n            | VARIABLE OP_RELA_LESS LITERAL\n            | VARIABLE OP_RELA_LESS CHARACTER\n            | VARIABLE OP_RELA_LESS VARIABLE\n\n            | VARIABLE OP_RELA_BIGGER NUMERIC\n            | VARIABLE OP_RELA_BIGGER BOOLEAN\n            | VARIABLE OP_RELA_BIGGER LITERAL\n            | VARIABLE OP_RELA_BIGGER CHARACTER\n            | VARIABLE OP_RELA_BIGGER VARIABLE\n\n            | VARIABLE OP_RELA_LESS_EQUAL NUMERIC\n            | VARIABLE OP_RELA_LESS_EQUAL BOOLEAN\n            | VARIABLE OP_RELA_LESS_EQUAL LITERAL\n            | VARIABLE OP_RELA_LESS_EQUAL CHARACTER\n            | VARIABLE OP_RELA_LESS_EQUAL VARIABLE\n\n            | VARIABLE OP_RELA_BIGGER_EQUAL NUMERIC\n            | VARIABLE OP_RELA_BIGGER_EQUAL BOOLEAN\n            | VARIABLE OP_RELA_BIGGER_EQUAL LITERAL\n            | VARIABLE OP_RELA_BIGGER_EQUAL CHARACTER\n            | VARIABLE OP_RELA_BIGGER_EQUAL VARIABLE\n\n            | VARIABLE OP_RELA_COMPARE NUMERIC\n            | VARIABLE OP_RELA_COMPARE BOOLEAN\n            | VARIABLE OP_RELA_COMPARE LITERAL\n            | VARIABLE OP_RELA_COMPARE CHARACTER\n            | VARIABLE OP_RELA_COMPARE VARIABLE\n\n            | VARIABLE OP_RELA_DIFFERENTIATE NUMERIC\n            | VARIABLE OP_RELA_DIFFERENTIATE BOOLEAN\n            | VARIABLE OP_RELA_DIFFERENTIATE LITERAL\n            | VARIABLE OP_RELA_DIFFERENTIATE CHARACTER\n            | VARIABLE OP_RELA_DIFFERENTIATE VARIABLE\n    \n    value : CHARACTER\n            | LITERAL\n            | NUMERIC\n            | BOOLEAN\n    '
    
_lr_action_items = {'OP_MARK_COMMENT':([0,1,2,3,4,5,6,7,8,9,10,11,16,18,19,20,23,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,99,100,101,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,],[11,11,-2,-3,-4,-5,-6,-7,-8,-9,-10,-33,-74,-76,-77,-75,-1,-34,-39,-40,-41,-42,-43,-48,-44,-45,-46,-47,-53,-49,-50,-51,-52,-58,-54,-55,-56,-57,-63,-59,-60,-61,-62,-68,-64,-65,-66,-67,-73,-69,-70,-71,-72,-35,-36,-37,-38,-13,-14,-15,-32,-28,-29,-30,-31,-21,-16,-26,-22,-17,-27,-23,-18,-24,-19,-25,-20,11,-11,11,-12,]),'INT':([0,1,2,3,4,5,6,7,8,9,10,11,16,18,19,20,23,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,99,100,101,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,],[12,12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-33,-74,-76,-77,-75,-1,-34,-39,-40,-41,-42,-43,-48,-44,-45,-46,-47,-53,-49,-50,-51,-52,-58,-54,-55,-56,-57,-63,-59,-60,-61,-62,-68,-64,-65,-66,-67,-73,-69,-70,-71,-72,-35,-36,-37,-38,-13,-14,-15,-32,-28,-29,-30,-31,-21,-16,-26,-22,-17,-27,-23,-18,-24,-19,-25,-20,12,-11,12,-12,]),'DOUBLE':([0,1,2,3,4,5,6,7,8,9,10,11,16,18,19,20,23,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,99,100,101,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,],[14,14,-2,-3,-4,-5,-6,-7,-8,-9,-10,-33,-74,-76,-77,-75,-1,-34,-39,-40,-41,-42,-43,-48,-44,-45,-46,-47,-53,-49,-50,-51,-52,-58,-54,-55,-56,-57,-63,-59,-60,-61,-62,-68,-64,-65,-66,-67,-73,-69,-70,-71,-72,-35,-36,-37,-38,-13,-14,-15,-32,-28,-29,-30,-31,-21,-16,-26,-22,-17,-27,-23,-18,-24,-19,-25,-20,14,-11,14,-12,]),'BOOL':([0,1,2,3,4,5,6,7,8,9,10,11,16,18,19,20,23,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,99,100,101,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,],[15,15,-2,-3,-4,-5,-6,-7,-8,-9,-10,-33,-74,-76,-77,-75,-1,-34,-39,-40,-41,-42,-43,-48,-44,-45,-46,-47,-53,-49,-50,-51,-52,-58,-54,-55,-56,-57,-63,-59,-60,-61,-62,-68,-64,-65,-66,-67,-73,-69,-70,-71,-72,-35,-36,-37,-38,-13,-14,-15,-32,-28,-29,-30,-31,-21,-16,-26,-22,-17,-27,-23,-18,-24,-19,-25,-20,15,-11,15,-12,]),'CHARACTER':([0,1,2,3,4,5,6,7,8,9,10,11,16,18,19,20,22,23,25,31,32,33,34,35,36,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,99,100,101,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,],[16,16,-2,-3,-4,-5,-6,-7,-8,-9,-10,-33,-74,-76,-77,-75,46,-1,52,63,68,73,78,83,88,-34,-39,-40,-41,-42,-43,-48,-44,-45,-46,-47,-53,-49,-50,-51,-52,-58,-54,-55,-56,-57,-63,-59,-60,-61,-62,-68,-64,-65,-66,-67,-73,-69,-70,-71,-72,-35,-36,-37,-38,-13,-14,-15,-32,-28,-29,-30,-31,-21,-16,-26,-22,-17,-27,-23,-18,-24,-19,-25,-20,16,-11,16,-12,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,16,18,19,20,23,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,99,100,101,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,],[17,17,-2,-3,-4,-5,-6,-7,-8,-9,-10,-33,-74,-76,-77,-75,-1,-34,-39,-40,-41,-42,-43,-48,-44,-45,-46,-47,-53,-49,-50,-51,-52,-58,-54,-55,-56,-57,-63,-59,-60,-61,-62,-68,-64,-65,-66,-67,-73,-69,-70,-71,-72,-35,-36,-37,-38,-13,-14,-15,-32,-28,-29,-30,-31,-21,-16,-26,-22,-17,-27,-23,-18,-24,-19,-25,-20,17,-11,17,-12,]),'VARIABLE':([0,1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,23,25,26,27,28,29,30,31,32,33,34,35,36,41,47,48,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,100,101,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,],[13,13,-2,-3,-4,-5,-6,-7,-8,-9,-10,-33,24,37,38,39,40,-76,-77,-75,45,-1,49,54,55,56,57,58,59,64,69,74,79,84,98,-34,102,-39,-40,-41,-42,-43,-48,-44,-45,-46,-47,-53,-49,-50,-51,-52,-58,-54,-55,-56,-57,-63,-59,-60,-61,-62,-68,-64,-65,-66,-67,-73,-69,-70,-71,-72,-35,110,-36,113,-37,115,-38,117,-13,-14,-15,-32,-28,-29,-30,-31,-21,-16,-26,-22,-17,-27,-23,-18,-24,-19,-25,-20,13,-11,13,-12,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,16,18,19,20,23,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,99,100,101,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,],[21,21,-2,-3,-4,-5,-6,-7,-8,-9,-10,-33,-74,-76,-77,-75,-1,-34,-39,-40,-41,-42,-43,-48,-44,-45,-46,-47,-53,-49,-50,-51,-52,-58,-54,-55,-56,-57,-63,-59,-60,-61,-62,-68,-64,-65,-66,-67,-73,-69,-70,-71,-72,-35,-36,-37,-38,-13,-14,-15,-32,-28,-29,-30,-31,-21,-16,-26,-22,-17,-27,-23,-18,-24,-19,-25,-20,21,-11,21,-12,]),'OP_EXPR_OPEN_PARENTHESIS':([0,1,2,3,4,5,6,7,8,9,10,11,16,18,19,20,21,23,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,99,100,101,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,],[22,22,-2,-3,-4,-5,-6,-7,-8,-9,-10,-33,-74,-76,-77,-75,41,-1,-34,-39,-40,-41,-42,-43,-48,-44,-45,-46,-47,-53,-49,-50,-51,-52,-58,-54,-55,-56,-57,-63,-59,-60,-61,-62,-68,-64,-65,-66,-67,-73,-69,-70,-71,-72,-35,-36,-37,-38,-13,-14,-15,-32,-28,-29,-30,-31,-21,-16,-26,-22,-17,-27,-23,-18,-24,-19,-25,-20,22,-11,22,-12,]),'LITERAL':([0,1,2,3,4,5,6,7,8,9,10,11,16,18,19,20,22,23,25,31,32,33,34,35,36,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,99,100,101,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,],[20,20,-2,-3,-4,-5,-6,-7,-8,-9,-10,-33,-74,-76,-77,-75,20,-1,53,62,67,72,77,82,87,-34,-39,-40,-41,-42,-43,-48,-44,-45,-46,-47,-53,-49,-50,-51,-52,-58,-54,-55,-56,-57,-63,-59,-60,-61,-62,-68,-64,-65,-66,-67,-73,-69,-70,-71,-72,-35,-36,-37,-38,118,-13,-14,-15,-32,-28,-29,-30,-31,-21,-16,-26,-22,-17,-27,-23,-18,-24,-19,-25,-20,20,-11,20,-12,]),'NUMERIC':([0,1,2,3,4,5,6,7,8,9,10,11,16,18,19,20,22,23,25,31,32,33,34,35,36,47,48,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,95,99,100,101,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,],[18,18,-2,-3,-4,-5,-6,-7,-8,-9,-10,-33,-74,-76,-77,-75,18,-1,50,60,65,70,75,80,85,-34,103,-39,-40,-41,-42,-43,-48,-44,-45,-46,-47,-53,-49,-50,-51,-52,-58,-54,-55,-56,-57,-63,-59,-60,-61,-62,-68,-64,-65,-66,-67,-73,-69,-70,-71,-72,-35,111,-36,-37,-38,-13,-14,-15,-32,-28,-29,-30,-31,-21,-16,-26,-22,-17,-27,-23,-18,-24,-19,-25,-20,18,-11,18,-12,]),'BOOLEAN':([0,1,2,3,4,5,6,7,8,9,10,11,16,18,19,20,22,23,25,31,32,33,34,35,36,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,99,100,101,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,],[19,19,-2,-3,-4,-5,-6,-7,-8,-9,-10,-33,-74,-76,-77,-75,19,-1,51,61,66,71,76,81,86,-34,-39,-40,-41,-42,-43,-48,-44,-45,-46,-47,-53,-49,-50,-51,-52,-58,-54,-55,-56,-57,-63,-59,-60,-61,-62,-68,-64,-65,-66,-67,-73,-69,-70,-71,-72,-35,-36,114,-37,-38,-13,-14,-15,-32,-28,-29,-30,-31,-21,-16,-26,-22,-17,-27,-23,-18,-24,-19,-25,-20,19,-11,19,-12,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,16,18,19,20,23,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,99,100,101,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,133,136,],[0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-33,-74,-76,-77,-75,-1,-34,-39,-40,-41,-42,-43,-48,-44,-45,-46,-47,-53,-49,-50,-51,-52,-58,-54,-55,-56,-57,-63,-59,-60,-61,-62,-68,-64,-65,-66,-67,-73,-69,-70,-71,-72,-35,-36,-37,-38,-13,-14,-15,-32,-28,-29,-30,-31,-21,-16,-26,-22,-17,-27,-23,-18,-24,-19,-25,-20,-11,-12,]),'ELSE':([3,4,5,6,7,8,9,10,11,16,18,19,20,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,99,100,101,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,133,136,],[-3,-4,-5,-6,-7,-8,-9,-10,-33,-74,-76,-77,-75,-34,-39,-40,-41,-42,-43,-48,-44,-45,-46,-47,-53,-49,-50,-51,-52,-58,-54,-55,-56,-57,-63,-59,-60,-61,-62,-68,-64,-65,-66,-67,-73,-69,-70,-71,-72,-35,-36,-37,-38,-13,-14,-15,-32,-28,-29,-30,-31,-21,-16,-26,-22,-17,-27,-23,-18,-24,-19,-25,-20,134,-12,]),'OP_ATRI_EQUAL':([13,24,37,38,39,40,],[25,48,90,92,94,96,]),'OP_MATE_PLUS':([13,45,102,110,],[26,26,26,26,]),'OP_MATE_MINUS':([13,45,102,110,],[27,27,27,27,]),'OP_MATE_TIMES':([13,45,102,110,],[28,28,28,28,]),'OP_MATE_DIVISION':([13,45,102,110,],[29,29,29,29,]),'OP_MATE_MODULE':([13,45,102,110,],[30,30,30,30,]),'OP_RELA_LESS':([13,45,98,],[31,31,31,]),'OP_RELA_BIGGER':([13,45,98,],[32,32,32,]),'OP_RELA_LESS_EQUAL':([13,45,98,],[33,33,33,]),'OP_RELA_BIGGER_EQUAL':([13,45,98,],[34,34,34,]),'OP_RELA_COMPARE':([13,45,98,],[35,35,35,]),'OP_RELA_DIFFERENTIATE':([13,45,98,],[36,36,36,]),'OP_EXPR_CLOSE_PARENTHESIS':([18,19,20,42,43,44,46,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,97,],[-76,-77,-75,99,100,101,-74,-39,-40,-41,-42,-43,-48,-44,-45,-46,-47,-53,-49,-50,-51,-52,-58,-54,-55,-56,-57,-63,-59,-60,-61,-62,-68,-64,-65,-66,-67,-73,-69,-70,-71,-72,119,]),'EOB':([24,37,38,39,40,49,50,51,52,53,54,55,56,57,58,102,103,104,110,111,112,113,114,115,116,117,118,],[47,89,91,93,95,105,106,107,108,109,-39,-40,-41,-42,-43,120,121,122,123,124,125,126,127,128,129,130,131,]),'CHAR':([94,],[116,]),'OP_EXEC_COLON':([119,134,],[132,135,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,],[1,]),'statement':([0,1,132,135,],[2,23,133,136,]),'comment':([0,1,132,135,],[3,3,3,3,]),'declaration':([0,1,132,135,],[4,4,4,4,]),'assignment':([0,1,132,135,],[5,5,5,5,]),'decision':([0,1,132,135,],[6,6,6,6,]),'expression':([0,1,132,135,],[7,7,7,7,]),'operation':([0,1,22,48,90,132,135,],[8,8,43,104,112,8,8,]),'conditional':([0,1,22,41,132,135,],[9,9,42,97,9,9,]),'value':([0,1,22,132,135,],[10,10,44,10,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements','syntactic.py',8),
  ('statements -> statement','statements',1,'p_statements','syntactic.py',9),
  ('statement -> comment','statement',1,'p_statement','syntactic.py',14),
  ('statement -> declaration','statement',1,'p_statement','syntactic.py',15),
  ('statement -> assignment','statement',1,'p_statement','syntactic.py',16),
  ('statement -> decision','statement',1,'p_statement','syntactic.py',17),
  ('statement -> expression','statement',1,'p_statement','syntactic.py',18),
  ('statement -> operation','statement',1,'p_statement','syntactic.py',19),
  ('statement -> conditional','statement',1,'p_statement','syntactic.py',20),
  ('statement -> value','statement',1,'p_statement','syntactic.py',21),
  ('decision -> IF OP_EXPR_OPEN_PARENTHESIS conditional OP_EXPR_CLOSE_PARENTHESIS OP_EXEC_COLON statement','decision',6,'p_decision','syntactic.py',26),
  ('decision -> IF OP_EXPR_OPEN_PARENTHESIS conditional OP_EXPR_CLOSE_PARENTHESIS OP_EXEC_COLON statement ELSE OP_EXEC_COLON statement','decision',9,'p_decision','syntactic.py',27),
  ('expression -> OP_EXPR_OPEN_PARENTHESIS conditional OP_EXPR_CLOSE_PARENTHESIS','expression',3,'p_expression','syntactic.py',32),
  ('expression -> OP_EXPR_OPEN_PARENTHESIS operation OP_EXPR_CLOSE_PARENTHESIS','expression',3,'p_expression','syntactic.py',33),
  ('expression -> OP_EXPR_OPEN_PARENTHESIS value OP_EXPR_CLOSE_PARENTHESIS','expression',3,'p_expression','syntactic.py',34),
  ('assignment -> INT VARIABLE OP_ATRI_EQUAL NUMERIC EOB','assignment',5,'p_assignment','syntactic.py',39),
  ('assignment -> DOUBLE VARIABLE OP_ATRI_EQUAL NUMERIC EOB','assignment',5,'p_assignment','syntactic.py',40),
  ('assignment -> BOOL VARIABLE OP_ATRI_EQUAL BOOLEAN EOB','assignment',5,'p_assignment','syntactic.py',41),
  ('assignment -> CHARACTER VARIABLE OP_ATRI_EQUAL CHAR EOB','assignment',5,'p_assignment','syntactic.py',42),
  ('assignment -> STRING VARIABLE OP_ATRI_EQUAL LITERAL EOB','assignment',5,'p_assignment','syntactic.py',43),
  ('assignment -> INT VARIABLE OP_ATRI_EQUAL VARIABLE EOB','assignment',5,'p_assignment','syntactic.py',45),
  ('assignment -> DOUBLE VARIABLE OP_ATRI_EQUAL VARIABLE EOB','assignment',5,'p_assignment','syntactic.py',46),
  ('assignment -> BOOL VARIABLE OP_ATRI_EQUAL VARIABLE EOB','assignment',5,'p_assignment','syntactic.py',47),
  ('assignment -> CHARACTER VARIABLE OP_ATRI_EQUAL VARIABLE EOB','assignment',5,'p_assignment','syntactic.py',48),
  ('assignment -> STRING VARIABLE OP_ATRI_EQUAL VARIABLE EOB','assignment',5,'p_assignment','syntactic.py',49),
  ('assignment -> INT VARIABLE OP_ATRI_EQUAL operation EOB','assignment',5,'p_assignment','syntactic.py',51),
  ('assignment -> DOUBLE VARIABLE OP_ATRI_EQUAL operation EOB','assignment',5,'p_assignment','syntactic.py',52),
  ('assignment -> VARIABLE OP_ATRI_EQUAL NUMERIC EOB','assignment',4,'p_assignment','syntactic.py',54),
  ('assignment -> VARIABLE OP_ATRI_EQUAL BOOLEAN EOB','assignment',4,'p_assignment','syntactic.py',55),
  ('assignment -> VARIABLE OP_ATRI_EQUAL CHARACTER EOB','assignment',4,'p_assignment','syntactic.py',56),
  ('assignment -> VARIABLE OP_ATRI_EQUAL LITERAL EOB','assignment',4,'p_assignment','syntactic.py',57),
  ('assignment -> VARIABLE OP_ATRI_EQUAL VARIABLE EOB','assignment',4,'p_assignment','syntactic.py',58),
  ('comment -> OP_MARK_COMMENT','comment',1,'p_comment','syntactic.py',63),
  ('declaration -> INT VARIABLE EOB','declaration',3,'p_declaration','syntactic.py',68),
  ('declaration -> DOUBLE VARIABLE EOB','declaration',3,'p_declaration','syntactic.py',69),
  ('declaration -> BOOL VARIABLE EOB','declaration',3,'p_declaration','syntactic.py',70),
  ('declaration -> CHARACTER VARIABLE EOB','declaration',3,'p_declaration','syntactic.py',71),
  ('declaration -> STRING VARIABLE EOB','declaration',3,'p_declaration','syntactic.py',72),
  ('operation -> VARIABLE OP_MATE_PLUS VARIABLE','operation',3,'p_operation','syntactic.py',77),
  ('operation -> VARIABLE OP_MATE_MINUS VARIABLE','operation',3,'p_operation','syntactic.py',78),
  ('operation -> VARIABLE OP_MATE_TIMES VARIABLE','operation',3,'p_operation','syntactic.py',79),
  ('operation -> VARIABLE OP_MATE_DIVISION VARIABLE','operation',3,'p_operation','syntactic.py',80),
  ('operation -> VARIABLE OP_MATE_MODULE VARIABLE','operation',3,'p_operation','syntactic.py',81),
  ('conditional -> VARIABLE OP_RELA_LESS NUMERIC','conditional',3,'p_conditional','syntactic.py',86),
  ('conditional -> VARIABLE OP_RELA_LESS BOOLEAN','conditional',3,'p_conditional','syntactic.py',87),
  ('conditional -> VARIABLE OP_RELA_LESS LITERAL','conditional',3,'p_conditional','syntactic.py',88),
  ('conditional -> VARIABLE OP_RELA_LESS CHARACTER','conditional',3,'p_conditional','syntactic.py',89),
  ('conditional -> VARIABLE OP_RELA_LESS VARIABLE','conditional',3,'p_conditional','syntactic.py',90),
  ('conditional -> VARIABLE OP_RELA_BIGGER NUMERIC','conditional',3,'p_conditional','syntactic.py',92),
  ('conditional -> VARIABLE OP_RELA_BIGGER BOOLEAN','conditional',3,'p_conditional','syntactic.py',93),
  ('conditional -> VARIABLE OP_RELA_BIGGER LITERAL','conditional',3,'p_conditional','syntactic.py',94),
  ('conditional -> VARIABLE OP_RELA_BIGGER CHARACTER','conditional',3,'p_conditional','syntactic.py',95),
  ('conditional -> VARIABLE OP_RELA_BIGGER VARIABLE','conditional',3,'p_conditional','syntactic.py',96),
  ('conditional -> VARIABLE OP_RELA_LESS_EQUAL NUMERIC','conditional',3,'p_conditional','syntactic.py',98),
  ('conditional -> VARIABLE OP_RELA_LESS_EQUAL BOOLEAN','conditional',3,'p_conditional','syntactic.py',99),
  ('conditional -> VARIABLE OP_RELA_LESS_EQUAL LITERAL','conditional',3,'p_conditional','syntactic.py',100),
  ('conditional -> VARIABLE OP_RELA_LESS_EQUAL CHARACTER','conditional',3,'p_conditional','syntactic.py',101),
  ('conditional -> VARIABLE OP_RELA_LESS_EQUAL VARIABLE','conditional',3,'p_conditional','syntactic.py',102),
  ('conditional -> VARIABLE OP_RELA_BIGGER_EQUAL NUMERIC','conditional',3,'p_conditional','syntactic.py',104),
  ('conditional -> VARIABLE OP_RELA_BIGGER_EQUAL BOOLEAN','conditional',3,'p_conditional','syntactic.py',105),
  ('conditional -> VARIABLE OP_RELA_BIGGER_EQUAL LITERAL','conditional',3,'p_conditional','syntactic.py',106),
  ('conditional -> VARIABLE OP_RELA_BIGGER_EQUAL CHARACTER','conditional',3,'p_conditional','syntactic.py',107),
  ('conditional -> VARIABLE OP_RELA_BIGGER_EQUAL VARIABLE','conditional',3,'p_conditional','syntactic.py',108),
  ('conditional -> VARIABLE OP_RELA_COMPARE NUMERIC','conditional',3,'p_conditional','syntactic.py',110),
  ('conditional -> VARIABLE OP_RELA_COMPARE BOOLEAN','conditional',3,'p_conditional','syntactic.py',111),
  ('conditional -> VARIABLE OP_RELA_COMPARE LITERAL','conditional',3,'p_conditional','syntactic.py',112),
  ('conditional -> VARIABLE OP_RELA_COMPARE CHARACTER','conditional',3,'p_conditional','syntactic.py',113),
  ('conditional -> VARIABLE OP_RELA_COMPARE VARIABLE','conditional',3,'p_conditional','syntactic.py',114),
  ('conditional -> VARIABLE OP_RELA_DIFFERENTIATE NUMERIC','conditional',3,'p_conditional','syntactic.py',116),
  ('conditional -> VARIABLE OP_RELA_DIFFERENTIATE BOOLEAN','conditional',3,'p_conditional','syntactic.py',117),
  ('conditional -> VARIABLE OP_RELA_DIFFERENTIATE LITERAL','conditional',3,'p_conditional','syntactic.py',118),
  ('conditional -> VARIABLE OP_RELA_DIFFERENTIATE CHARACTER','conditional',3,'p_conditional','syntactic.py',119),
  ('conditional -> VARIABLE OP_RELA_DIFFERENTIATE VARIABLE','conditional',3,'p_conditional','syntactic.py',120),
  ('value -> CHARACTER','value',1,'p_value','syntactic.py',125),
  ('value -> LITERAL','value',1,'p_value','syntactic.py',126),
  ('value -> NUMERIC','value',1,'p_value','syntactic.py',127),
  ('value -> BOOLEAN','value',1,'p_value','syntactic.py',128),
]
